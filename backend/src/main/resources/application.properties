spring.application.name=crm-xeno

# DataSource configuration via envs
spring.datasource.url=${DB_URL}
spring.datasource.username=${DB_USERNAME}
spring.datasource.password=${DB_PASSWORD}
# For Postgres on Neon
spring.datasource.driver-class-name=${SPRING_DATASOURCE_DRIVER_CLASS_NAME:}
spring.jpa.database-platform=${SPRING_JPA_DATABASE_PLATFORM:}
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

# OAuth2 client configuration - FIXED
spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID:}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET:}
spring.security.oauth2.client.registration.google.scope=openid,profile,email
# CORRECTED redirect URI - Spring Boot default pattern
spring.security.oauth2.client.registration.google.redirect-uri=https://crm-sde-assignemnt-xeno.onrender.com/login/oauth2/code/google

# OAuth2 provider configuration
spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/v2/auth
spring.security.oauth2.client.provider.google.token-uri=https://oauth2.googleapis.com/token
spring.security.oauth2.client.provider.google.user-info-uri=https://www.googleapis.com/oauth2/v3/userinfo
spring.security.oauth2.client.provider.google.user-name-attribute=sub

# Serve index.html for root
spring.mvc.view.suffix=.html

# Frontend URL (used for CORS and OAuth success redirect)
app.frontend.url=${FRONTEND_URL:https://mini-crm-iqd4.onrender.com}

# Log levels for debugging auth/cookies
logging.level.com.xeno.crm=DEBUG
logging.level.org.springframework.security=INFO

# Ensure session cookie works cross-site (frontend ↔ backend on different domains)
server.forward-headers-strategy=framework
server.servlet.session.cookie.same-site=None
server.servlet.session.cookie.secure=true
server.servlet.session.cookie.http-only=true
# Set cookie domain to work across subdomains
server.servlet.session.cookie.domain=.onrender.com

# Session persistence and timeout
server.servlet.session.timeout=30m
server.servlet.session.persistent=true

# Vendor simulation success rate (0.0 - 1.0)
app.vendor.successRate=${VENDOR_SUCCESS_RATE:0.9}

# Groq (AI suggestions) - map env → internal property keys (avoid circular refs)
groq.model.name=${GROQ_MODEL_NAME:llama-3.1-8b-instant}
groq.api.key=${GROQ_API_KEY:}
#changes